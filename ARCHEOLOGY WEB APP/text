<!DOCTYPE html>
<html>
<head>
    <title>Course Information Table</title>
</head>
<body>
    <h1>Course Information Input Form</h1>
    <form id="courseForm">
        <label for="courseName">Course Name:</label>
        <input type="text" id="courseName" name="courseName" required><br><br>

        <label for="session">Session:</label>
        <input type="text" id="session" name="session" required><br><br>

        <label for="courseDescription">Course Description:</label>
        <input type="text" id="courseDescription" name="courseDescription" required><br><br>

        <label for="units">Units:</label>
        <input type="number" id="units" name="units" required><br><br>

        <label for="status">Status:</label>
        <input type="text" id="status" name="status" required><br><br>

        <label for="marks">Marks:</label>
        <input type="number" id="marks" name="marks" required><br><br>

        <label for="remarks">Remarks:</label>
        <input type="text" id="remarks" name="remarks" required><br><br>

        <input type="button" value="Submit" onclick="addRow()">
    </form>

    <h2>Course Information Table</h2>
    <table id="courseTable" border="1">
        <thead>
            <tr>
                <th>Course Name</th>
                <th>Session</th>
                <th>Course Description</th>
                <th>Units</th>
                <th>Status</th>
                <th>Marks</th>
                <th>Remarks</th>
                <th>Grade</th>
                <th>GP</th>
                <th>WGP</th>
            </tr>
        </thead>
        <tbody>
        </tbody>
    </table>

    <script>
        function addRow() {
            var courseName = document.getElementById("courseName").value;
            var session = document.getElementById("session").value;
            var courseDescription = document.getElementById("courseDescription").value;
            var units = document.getElementById("units").value;
            var status = document.getElementById("status").value;
            var marks = document.getElementById("marks").value;
            var remarks = document.getElementById("remarks").value;

            // Calculate Grade, GP, and WGP based on the marks and your grading system
            var grade = calculateGrade(marks);
            var gp = calculateGP(grade);
            var wgp = calculateWGP(gp, units);

            var table = document.getElementById("courseTable").getElementsByTagName('tbody')[0];
            var newRow = table.insertRow(table.rows.length);
            var cell1 = newRow.insertCell(0);
            var cell2 = newRow.insertCell(1);
            var cell3 = newRow.insertCell(2);
            var cell4 = newRow.insertCell(3);
            var cell5 = newRow.insertCell(4);
            var cell6 = newRow.insertCell(5);
            var cell7 = newRow.insertCell(6);
            var cell8 = newRow.insertCell(7);
            var cell9 = newRow.insertCell(8);
            var cell10 = newRow.insertCell(9);

            cell1.innerHTML = courseName;
            cell2.innerHTML = session;
            cell3.innerHTML = courseDescription;
            cell4.innerHTML = units;
            cell5.innerHTML = status;
            cell6.innerHTML = marks;
            cell7.innerHTML = remarks;
            cell8.innerHTML = grade;
            cell9.innerHTML = gp;
            cell10.innerHTML = wgp;

            document.getElementById("courseForm").reset();
        }

        // Define grading logic based on the specified ranges
        function calculateGrade(marks) {
            if (marks >= 70 && marks <= 100) return 'A';
            else if (marks >= 60 && marks <= 69) return 'B';
            else if (marks >= 50 && marks <= 59) return 'C';
            else if (marks >= 40 && marks <= 49) return 'D';
            else if (marks >= 30 && marks <= 39) return 'E';
            else if (marks >= 0 && marks <= 29) return 'F';
            else return 'Invalid'; // Handle invalid marks
        }

        // Define GP calculation logic (customize as needed)
        function calculateGP(grade) {
            // Define your GP values for each grade
            var gpValues = {
                'A': 4.0,
                'B': 3.0,
                'C': 2.0,
                'D': 1.0,
                'E': 0.0,
                'F': 0.0
            };

            return gpValues[grade] || 0.0; // Default to 0.0 if grade is not found
        }

        // Calculate WGP (Weighted Grade Points) based on GP and units
        function calculateWGP(gp, units) {
            return gp * units;
        }
    </script>
</body>
</html>
